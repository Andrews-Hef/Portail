{% extends 'base.html.twig' %}

{# On crée des variables personnalisées #}
{% set queryParams = app.request.query.all %}

{% block title %}
	videos
{% endblock %}

{% block stylesheets %}
	<link rel="stylesheet" href="../css/styleCatalogue.css">
	<link rel="stylesheet" href="../css/catalogue.css">
{% endblock %}


{% block body %}


	{# début image bannière #}
	<div class="divimage"><img class="img-fluid imageDiv" src="../img/portaildiv2.png">
	</div>
	{# fin image bannière #}

	{# Début div présentation magasin #}
	<div class="workshopbody">
		<div id="movie-card-list">
			<div class="movie-card">
				<div class="color-overlay">
					<div class="movie-share">&nbsp;</div>
					<div class="movie-content">
						<div class="movie-header">
							<h1 class="movie-title">PROFITEZ DES MEILLEURS FILMS/SÉRIES/ANIMÉS AVEC PORTAIL PRIME.</h1>

							<h4 class="movie-info">Le site de streaming que vous allez adorer</h4>
						</div>
						<br>
						<p class="movie-desc">Abonnez-vous à Portail Prime pour pouvoir profiter de toutes nos vidéos sans pub et en qualité HD, où que vous soyez et quand vous voulez ! Profitez donc de nos offres qui vous permettrons de prendre un portail vers de nouvelles aventures
																																																	        et de nouvelles dimensions.</p>
						<a class="btn btn-outline" href="https://claytonstate.qualtrics.com/jfe/form/SV_9FScuNt5Fdv5yXb" target="_blank">Magasin</a>
					</div>
					<div class="movie-content" style="float:right !important; width:45%;">
						<img class="img-fluid" src="../img/fondDivAchat3.png" alt="MDB Logo" loading="lazy" style="padding-left:3px;"/>
					</div>
				</div>

			</div>
		</div>
	</div>
	{# Fin div présentation magasin #}


	<div class="container-fluid" style="padding-right: 90px; padding-left: 90px; margin-top:-10px;">
  <h1> Catalogue De Portail </h1>
		<div class="row borderColorFiltre">
			<div class="col-sm-3 text-white styleContainBox">

				<div class="boxes3">
					<div class="d-flex left" role="search">
						<input placeholder="Search" aria-label="Search" type="text" id="titre-input" name="titre-input" class="autocomplete autocompleteTest">
					</div>
				</div>
			</div>
			<div class="col-sm-4 text-white styleContainBox">

				<div id="first-div boxes" class="boxes">
					Types de film
					<hr>
					<ul class="image-gallery-ul">
						<form id="my-form2" method="post">
							{% for type in typesVideos %}
								<div class="form-check">
									<input type="checkbox" name="typesVideos[]" value="{{ type.id }}"/>
									<label class="form-check-label" for="typesVideos_{{ type.id }}">
										{{ type.libelleTypeVideo }}
									</label>
								</div>
							{% endfor %}
						</form>
					</ul>
				</div>
			</div>
			<div class="col-sm-1 text-white styleContainBox"></div>

			<div class="col-sm-4 text-white styleContainBox">

				<div id="second-div boxes2" class="boxes2">
					Catégories de film
					<hr>

					<ul class="image-gallery-ul">
						<form id="my-form" method="post">
							{% for categorie in categories %}
								<div class="form-check">
									<input type="checkbox" name="categories[]" value="{{ categorie.id }}" id="check1"/>
									<label class="form-check-label" for="categorie_{{ categorie.id }}">
										{{ categorie.libelleCategorie }}
									</label>
								</div>
							{% endfor %}
						</form>
					</ul>
				</div>
			</div>
  
		</div>


		<div class="container-fluid" style="padding-right: 90px; padding-left: 90px; ">
			<div class="grid-wrapper" id="content">
				{% include "catalogue/cardsCatalogue.html.twig" %}
			</div>
		</div>


	{% endblock %}


	{% block javascripts %}

		{# <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> #}
		{# essayer de fusionenr les codes d'en dessous #}
			<script>
window.onload = () => {
$(document).ready(function () {
$("#titre-input").autocomplete({
source: function (request, response) {
$.ajax({
url: "{{ path('autocomplete_titres') }}",
dataType: "json",
data: {
term: request.term
},
success: function (data) {
response(data);
}
});
},
minLength: 2,
select: function (event, ui) {
var titreValue = ui.item.value;
var idVideo = ui.item.id;
window.location.href = "{{ path('video.show', {'id': 'idVideo'}) }}".replace('idVideo', idVideo);


var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();




$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (response) {
var content = $(response).find('#content').html();
$('#content').html(content);
},
error: function (jqXHR, textStatus, errorThrown) {
console.log(errorThrown);
}
});
}
});
});


$('#titre-input').keyup(function (event) {
var titreValue = $('#titre-input').val();
var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();

// Récupère les valeurs des cases à cocher pour le deuxième formulaire
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();

$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (response) {
var content = $(response).find('#content').html();
//        console.log(content);
// event.preventDefault(); // Empêcher le comportement de rafraîchissement par défaut du navigateur
$('#content').html(content);


// Exécuter votre requête AJAX à nouveau à chaque fois que la réponse est réussie
},
error: function (jqXHR, textStatus, errorThrown) {
console.log(errorThrown); // Afficher les erreurs dans la console
}
});
});

$('#my-form input[type=checkbox]').on('change', function () {
$('#my-form').submit();
});

// Envoyer les données du formulaire en utilisant Ajax
$('#my-form').on('submit', function (e) {
e.preventDefault();
var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();

// Récupère les valeurs des cases à cocher pour le deuxième formulaire
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();

var titreValue = $('#titre-input').val();

$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (data) {
var content = $(data).find('#content').html();
$('#content').html(content);

// Traitement de la réponse du script PHP côté client
console.log(data);
},
error: function (jqXHR, textStatus, errorThrown) { // Traitement de l'erreur côté client
console.error(jqXHR, textStatus, errorThrown);
}
});
});


$('#my-form2 input[type=checkbox]').on('change', function () {
$('#my-form2').submit();
});

// Envoyer les données du formulaire en utilisant Ajax
$('#my-form2').on('submit', function (e) {
e.preventDefault();
var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();

// Récupère les valeurs des cases à cocher pour le deuxième formulaire
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();

var titreValue = $('#titre-input').val();

$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (data) {
var content = $(data).find('#content').html();
$('#content').html(content);

// Traitement de la réponse du script PHP côté client
console.log(data);
},
error: function (jqXHR, textStatus, errorThrown) { // Traitement de l'erreur côté client
console.error(jqXHR, textStatus, errorThrown);
}
});
});
}
	</script>
{% endblock %}

