{% extends 'base.html.twig' %}

{# On crée des variables personnalisées #}
{% set queryParams = app.request.query.all %}

{% block title %}
	videos
{% endblock %}

{% block stylesheets %}
	<link rel="stylesheet" href="../css/styleCatalogue.css">
	<link rel="stylesheet" href="../css/catalogue.css">
{% endblock %}


{% block body %}


	<div
		class="container-fluid" style="padding-right: 90px; padding-left: 90px; padding-top:90px;">
		{# <h1> Catalogue De Portail </h1>
				<div class="row borderColorFiltre">
					<div class="col-sm-3 text-white styleContainBox">
		
						<div class="boxes3">
							<div class="d-flex left" role="search">
								<input placeholder="Search" aria-label="Search" type="text" id="titre-input" name="titre-input" class="autocomplete autocompleteTest">
							</div>
						</div>
					</div>
					<div class="col-sm-4 text-white styleContainBox">
		
						<div id="first-div boxes" class="boxes">
							Types de film
							<hr>
							<ul class="image-gallery-ul">
								<form id="my-form2" method="post">
									{% for type in typesVideos %}
										<div class="form-check">
											<input type="checkbox" name="typesVideos[]" value="{{ type.id }}"/>
											<label class="form-check-label" for="typesVideos_{{ type.id }}">
												{{ type.libelleTypeVideo }}
											</label>
										</div>
									{% endfor %}
								</form>
							</ul>
						</div>
					</div>
					<div class="col-sm-1 text-white styleContainBox"></div>
		
					<div class="col-sm-4 text-white styleContainBox">
		
						<div id="second-div boxes2" class="boxes2">
							Catégories de film
							<hr>
		
							<ul class="image-gallery-ul">
								<form id="my-form" method="post">
									{% for categorie in categories %}
										<div class="form-check">
											<input type="checkbox" name="categories[]" value="{{ categorie.id }}" id="check1"/>
											<label class="form-check-label" for="categorie_{{ categorie.id }}">
												{{ categorie.libelleCategorie }}
											</label>
										</div>
									{% endfor %}
								</form>
							</ul>
						</div>
					</div>
		  
				</div> #}


		<div style="max-width: 1300px; padding-bottom:30px;   margin-right: auto;
			  margin-left: auto;" class="texteVideo">
			<h1 class="align-left">Catalogue de Portail</h1>
			<p class="align-right">
				<div class="dropdown  align-right" id="second-div boxes2">
					<a class="dropdown-toggle hidden-arrow whiteArrow" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
						Types
					</a>
					<ul class="dropdown-menu ddropdown-menu-end w-80" style="right: 10px; left: auto; width:180px !important; min-width:180px; max-width:180px">
						<form id="my-form" method="post">
							{% for categorie in categories %}
								<div class="form-check">
									<input type="checkbox" name="categories[]" value="{{ categorie.id }}" id="check1"/>
									<label class="form-check-label" for="categorie_{{ categorie.id }}">
										{{ categorie.libelleCategorie }}
									</label>
								</div>
							{% endfor %}
						</form>
					</ul>
				</div>
			</p>
			<p class="align-right" style="padding-left:20px;">
				<div class="dropdown  align-right">
					<a class="dropdown-toggle hidden-arrow whiteArrow" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" style="width:130px !important">
						Catégories
					</a>
					<ul class="dropdown-menu ddropdown-menu-end w-80" style="right: 10px; left: auto; width:130px !important; min-width:130px; max-width:130px">
						<form id="my-form2" method="post">
							{% for type in typesVideos %}
								<div class="form-check">
									<input type="checkbox" name="typesVideos[]" value="{{ type.id }}"/>
									<label class="form-check-label" for="typesVideos_{{ type.id }}">
										{{ type.libelleTypeVideo }}
									</label>
								</div>
							{% endfor %}
						</form>
					</ul>
				</div>
			</p>
      	<div class="align-right" role="search"  style="padding-right:20px;">
          <input placeholder="Search" aria-label="Search" type="text" id="titre-input" name="titre-input" class="autocomplete autocompleteTest">
        </div>
		</div>

</div>

<div class="" style="padding-top:50px;">
	<div id="content" style="" class="content">
		{% include "catalogue/cardsCatalogue.html.twig" %}
	</div>
</div>{% endblock %}{% block javascripts %}

{# <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> #}
{# essayer de fusionenr les codes d'en dessous #}
	<script>
window.onload = () => {
$(document).ready(function () {
$("#titre-input").autocomplete({
source: function (request, response) {
$.ajax({
url: "{{ path('autocomplete_titres') }}",
dataType: "json",
data: {
term: request.term
},
success: function (data) {
response(data);
}
});
},
minLength: 2,
select: function (event, ui) {
var titreValue = ui.item.value;
var idVideo = ui.item.id;
window.location.href = "{{ path('video.show', {'id': 'idVideo'}) }}".replace('idVideo', idVideo);


var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();


$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (response) {
var content = $(response).find('#content').html();
$('#content').html(content);
},
error: function (jqXHR, textStatus, errorThrown) {
console.log(errorThrown);
}
});
}
});
});


$('#titre-input').keyup(function (event) {
var titreValue = $('#titre-input').val();
var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();

// Récupère les valeurs des cases à cocher pour le deuxième formulaire
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();

$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (response) {
var content = $(response).find('#content').html();
//        console.log(content);
// event.preventDefault(); // Empêcher le comportement de rafraîchissement par défaut du navigateur
$('#content').html(content);


// Exécuter votre requête AJAX à nouveau à chaque fois que la réponse est réussie
},
error: function (jqXHR, textStatus, errorThrown) {
console.log(errorThrown); // Afficher les erreurs dans la console
}
});
});

$('#my-form input[type=checkbox]').on('change', function () {
$('#my-form').submit();
});

// Envoyer les données du formulaire en utilisant Ajax
$('#my-form').on('submit', function (e) {
e.preventDefault();
var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();

// Récupère les valeurs des cases à cocher pour le deuxième formulaire
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();

var titreValue = $('#titre-input').val();

$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (data) {
var content = $(data).find('#content').html();
$('#content').html(content);

// Traitement de la réponse du script PHP côté client
console.log(data);
},
error: function (jqXHR, textStatus, errorThrown) { // Traitement de l'erreur côté client
console.error(jqXHR, textStatus, errorThrown);
}
});
});


$('#my-form2 input[type=checkbox]').on('change', function () {
$('#my-form2').submit();
});

// Envoyer les données du formulaire en utilisant Ajax
$('#my-form2').on('submit', function (e) {
e.preventDefault();
var categoriesForm1 = $('form#my-form input[name="categories[]"]:checked').map(function () {
return $(this).val();
}).get();

// Récupère les valeurs des cases à cocher pour le deuxième formulaire
var categoriesForm2 = $('form#my-form2 input[name="typesVideos[]"]:checked').map(function () {
return $(this).val();
}).get();

var titreValue = $('#titre-input').val();

$.ajax({
url: '/catalogue',
type: 'POST',
data: {
categoriesForm1: categoriesForm1,
categoriesForm2: categoriesForm2,
titre: titreValue
},
success: function (data) {
var content = $(data).find('#content').html();
$('#content').html(content);

// Traitement de la réponse du script PHP côté client
console.log(data);
},
error: function (jqXHR, textStatus, errorThrown) { // Traitement de l'erreur côté client
console.error(jqXHR, textStatus, errorThrown);
}
});
});
}</script>{% endblock %}

